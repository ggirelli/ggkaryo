% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggkaryo.R
\docType{class}
\name{ggkaryo-class}
\alias{ggkaryo-class}
\alias{ggkaryo}
\title{ggkaryo: a class for karyotype plotting and overlaying.}
\description{
The \\code{ggkaryo} class allows to plot (labeled) ideograms and to overlay
them with data track profiles and also highlight loci of interes (lois).
}
\section{Fields}{

\describe{
\item{\code{n_chrom}}{(numerical) number of chromosomes, default: 24}

\item{\code{hetero}}{(character) heterosome labels (without "chr"),
default: c("X", "Y")}

\item{\code{chrom_width}}{(numerical) width of the ideograms, default: 1}

\item{\code{chrom_padding}}{(numerical) space between ideograms, default: 5}

\item{\code{track_palette_name}}{(character) name of RColorBrewer palette for track
filling}

\item{\code{lois_palette_name}}{(character) name of RColorBrewer palette for lois
color}

\item{\code{giemsa_palette}}{(character) vector of colors for the giemsa bands}

\item{\code{giemsa_levels}}{(character) vector of giemsa band levels}

\item{\code{opposite}}{(logical) to plot profiles on both sides of the ideogram}

\item{\code{data}}{(list) contains ggkaryo data for plotting}
}}

\section{Methods}{

\describe{
\item{\code{add_arm_boxes()}}{Adds boxes around chromosome arms.}

\item{\code{add_chrom_labels()}}{Adds chromosome labels.}

\item{\code{add_lois(loiData, position, colorName, alpha = 1)}}{Adds details on Loci Of Interest (loi) to the current ggkaryo plot.
Builds .self$data[['lois']].
\describe{
  {\code{loiData}}{(character) path to BED5+ loi file}
  {\code{loiData}}{(data.table) data.table with BED5+ loi data}
  {\code{position}}{(character) either 'left', 'right' or 'center'}
  {\code{colorName}}{(character) column with color factors}
  {\code{alpha}}{(numeric) opacity level}
}}

\item{\code{add_lois_overlay(p)}}{Overlays track profiles to a ggkaryo plot.
\describe{
  {\code{p}}{(ggplot)}
}}

\item{\code{add_track(track, step, position = "auto", color = "auto", alpha = 0.5)}}{Adds a profile to the current ggkaryo plot. The input track must have
      already been binned with a consistent step. A consistent step is needed
      to automatically set any gap to 0 in the profile.
      Builds .self$data[['tracks']].
      \describe{
        {\code{track}}{(character) path to BED5+ file}
        {\code{track}}{(data.table) BED5+ data table}

        {\code{step}}{(numerical) bin step in nt}

        {\code{position}}{(character) one of auto|left|right. 'left' can be used
          only if opposite=T was used when initializing the ggkaryo object}

        {\code{color}}{(character) either 'auto' or a color string}

        {\code{alpha}}{(numerical) opacity level.}
      }}

\item{\code{add_track_overlay(p)}}{Overlays track profiles to a ggkaryo plot.
\describe{
  {\code{p}}{(ggplot)}
}}

\item{\code{bin_track(track, size, step, method = "within", fun.aggreg = mean, ...)}}{Bins a track based on provided bin size and step.
      Regions from the track are assigned to the bins when they are completely
      include ('within' method) or overlap even partially ('overlap' method).
      \describe{
        {\code{track}}{(data.table) BED5+ track data table}

        {\code{size}}{(numeric) bin size in nt}

        {\code{step}}{(numeric) bin step in nt}

        {\code{method}}{(string) either 'within' or 'overlap'}

        {\code{fun.aggreg}}{(function) how to aggregate values in bins}

        {\code{...}}{(mixed) additional parameters to pass to fun.aggreg}
      }
      \describe{returns data.table: binned track}}

\item{\code{chrom2id(chrom)}}{Converts a chromosome signature (seqname) to a numerical id.
\describe{
  {\code{chrom}}{
    (string) chromosome signature (e.g., 'chr1' or '1')}
}
\describe{returns numeric: chromosome numerical ID}}

\item{\code{chromID2x(chromID)}}{Retrieve the position of a chromosome on the X axis.
\describe{
  {\code{chromID}}{(numeric)}
}
\describe{returns numeric: chromosome position on the X axis}}

\item{\code{get_color(color, trackID)}}{Extracts, in order, track colors from the ggk$track_palette_name.
See RColorBrewer for more details.
\describe{
  {\code{color}}{(character) a color or 'auto'}
  {\code{trackID}}{(numeric) track number}
}}

\item{\code{get_next_position(position)}}{Selects position for the next track in such a fashion to balance out
left/right sides of the ideograms.
\describe{
  {\code{position}}{(character) 'right', 'left', or 'auto'}
}}

\item{\code{initialize(giemsa, ..., n_chrom = 24, hetero = c("X", "Y"),
  chrom_width = 1, chrom_padding = 5, track_palette_name = "Paired",
  lois_palette_name = "Dark2", giemsa_palette = c("#DDDDDD", "#9A9A9A",
  "#787878", "#555555", "#333333", "#FF0000", "#C4FFFC", "#AFE6FF"),
  giemsa_levels = c("gneg", "gpos25", "gpos50", "gpos75", "gpos100", "acen",
  "gvar", "stalk"), opposite = FALSE)}}{Initializer method. See \code{ggkaryo} description for more details}

\item{\code{norm2x(chromID, norm, position)}}{Converts normalized score to X coordinate in the ggkaryo plot.
      \describe{
        {\code{chromID}}{(numeric)}

        {\code{norm}}{(numeric) normalized score}

        {\code{position}}{(character) 'left' or 'right'}
      }
      \describe{returns numeric: normalized score X coordinate}}

\item{\code{plot_base()}}{Plots the current ggkaryo object (only basic layers).}

\item{\code{plot_full()}}{Plots the current ggkaryo object with tracks and lois.}

\item{\code{prep4bands()}}{Prepares data for plotting chromosome bands.
Builds .self$data[['bands']] object.}

\item{\code{prep4boxes()}}{Prepares data for plotting chromosome arm boxes. Chromosome arms are
identified based on the 'acen' bands that are used to divide each
chromosomes in two arms. Builds .self$data[['boxes']] object.}

\item{\code{prep4karyo(giemsa)}}{Builds a data.table to plot the ideograms and (optionally) boxes around
each chromosome arm.
\describe{
  {\code{giemsa}}{(character) path to giemsa BED5+ file}
  {\code{giemsa}}{(data.table) data table with giemsa BED5+ data}
}
\describe{returns data.table: adjusted giemsa data.table}}

\item{\code{prep4labels()}}{Prepares data for plotting chromosome labels.
Builds .self$data[['chrom_labels']] object.}

\item{\code{prep4plot()}}{Prepares for plotting. Builds .self$data[['plot']] object.}

\item{\code{read_giemsa(giemsa)}}{Reads a Giemsa bed file. Adds chromID, bandID, and X columns.
\describe{
  {\code{giemsa}}{(character) path to giemsa BED5+ file}
  {\code{giemsa}}{(data.table) data table with giemsa BED5+ data}
}
\describe{returns data.table: adjusted giemsa data.table}}
}}

\examples{
require(data.table)
require(ggkaryo2)

# Load example data
data('giemsa', package='ggkaryo2')
data('track', package='ggkaryo2')
data('lois', package='ggkaryo2')

# Plot ideogram
ggk = ggkaryo(giemsa)
ggk$plot_full()

# Plot ideogram with boxes around chromosome arms and labels
ggk = ggkaryo(giemsa)
ggk$add_arm_boxes()
ggk$add_chrom_labels()
ggk$plot_full()

# Plot ideogram with one profile track
ggk = ggkaryo(giemsa)
binnedTrack = track
ggk$add_track(binnedTrack, 1e5)
ggk$plot_full()

# Plot ideogram with two profile tracks on the same side
ggk = ggkaryo(giemsa)
binnedTrack2 = copy(binnedTrack)
binnedTrack2[, value := value*abs(rnorm(nrow(binnedTrack2)))]
ggk$add_track(binnedTrack, 1e5)
ggk$add_track(binnedTrack2, 1e5)
ggk$plot_full()

# Plot ideogram with two profile tracks on opposite sides
ggk = ggkaryo(giemsa, opposite=TRUE)
binnedTrack2 = copy(binnedTrack)
binnedTrack2[, value := value*abs(rnorm(nrow(binnedTrack2)))]
ggk$add_track(binnedTrack, 1e5)
ggk$add_track(binnedTrack2, 1e5)
ggk$plot_full()

# Plot ideogram with two profile tracks on opposite sides and central lois
ggk = ggkaryo(giemsa)
binnedTrack2 = copy(binnedTrack)
binnedTrack2[, value := value*abs(rnorm(nrow(binnedTrack2)))]
ggk$add_track(binnedTrack, 1e5)
ggk$add_track(binnedTrack2, 1e5)
loiData = lois
ggk$add_lois(loiData, "center", "sample")
ggk$plot_full()

}
